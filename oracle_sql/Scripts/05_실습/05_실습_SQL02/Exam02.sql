/* 05_실습_SQL02_SELECT(Function).pdf */
  
/* 1번 문제 */
SELECT STUDENT_NO AS 학번
 , STUDENT_NAME AS 이름
 , TO_CHAR(ENTRANCE_DATE, 'yyyy-mm-dd') AS 입학년도
 FROM TB_STUDENT
 WHERE DEPARTMENT_NO = '002'
 ORDER BY ENTRANCE_DATE;
/* 2번 문제 
: LENGTH(SUBSTR(PROFESSOR_NAME, 2)) <> 2; 를 활용 할 수도 있지만
 문제에서 성을 제외한 나머지 이름이 2글자가 아닌 사람을 조회하는 경우라면,
 이름은 2글자지만 성이 2글자 이상인 사람도 같이 조회될 수 있기 때문에
 올바르게 작성한 SQL 문장의 결과 값이 예상과 다르게 나올 수 있다.
*/
SELECT PROFESSOR_NAME 
 , PROFESSOR_SSN
 FROM TB_PROFESSOR
 WHERE PROFESSOR_NAME NOT LIKE '___'
 ORDER BY PROFESSOR_NAME;
/* 3번 문제 */
SELECT PROFESSOR_NAME AS 교수이름
 , 나이
 FROM (SELECT PROFESSOR_NAME
 , TRUNC(MONTHS_BETWEEN(SYSDATE, TO_CHAR(1900 + SUBSTR(PROFESSOR_SSN, 1, 2)) 
 || '-' || SUBSTR(PROFESSOR_SSN,3,2) || '-' 
|| SUBSTR(PROFESSOR_SSN,5,2))/12) AS 나이
 FROM TB_PROFESSOR
 WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1')
 ORDER BY 2, 1; 
 
/* 4번 문제 */
SELECT SUBSTR(PROFESSOR_NAME, 2) AS 이름
 FROM TB_PROFESSOR
 GROUP BY SUBSTR(PROFESSOR_NAME, 2)
 ORDER BY 1;
/* 5번 문제 */
SELECT STUDENT_NO
 , STUDENT_NAME
 FROM TB_STUDENT
 WHERE TRUNC(MONTHS_BETWEEN(ENTRANCE_DATE , TO_CHAR(1900 + SUBSTR(STUDENT_SSN , 1, 2)) 
 || '-' || SUBSTR(STUDENT_SSN, 3, 2) || '-'
|| SUBSTR(STUDENT_SSN, 5, 2))/12) > 19
 ORDER BY 2;
/* 6번 문제 */
SELECT TO_CHAR(TO_DATE('2020-12-25'), 'DAY') AS "2020년 크리스마스 무슨 요일?"
 FROM DUAL;
/* 7번 문제 */
/*
TO_DATE('99/10/11', 'YY/MM/DD') : 2099-10-11
TO_DATE('49/10/11', 'YY/MM/DD') : 2049-10-11
TO_DATE('99/10/11', 'RR/MM/DD') : 1999-10-11
TO_DATE('49/10/11', 'RR/MM/DD') : 1949-10-11
*/
/* 8번 문제 */
SELECT STUDENT_NO
 , STUDENT_NAME
 FROM TB_STUDENT
 WHERE STUDENT_NO NOT LIKE '%A%'
 ORDER BY STUDENT_NAME;
/* 9번 문제 */
SELECT ROUND(AVG(POINT), 1) AS 평점
 FROM TB_GRADE
 WHERE STUDENT_NO = 'A517178'
 GROUP BY STUDENT_NO;
/* 10번 문제 */
SELECT DEPARTMENT_NO AS 학과번호
 , COUNT(*) AS "학생수(명)"
 FROM TB_STUDENT
 GROUP BY DEPARTMENT_NO
 ORDER BY 1;
/* 11번 문제 */
SELECT COUNT(*)
 FROM TB_STUDENT
 WHERE COACH_PROFESSOR_NO IS NULL;
/* 12번 문제 */
SELECT SUBSTR(TERM_NO, 1, 4) AS 년도
 , ROUND(AVG(POINT), 1) AS "년도 별 평점"
 FROM TB_GRADE
 WHERE STUDENT_NO = 'A112113'
 GROUP BY SUBSTR(TERM_NO, 1, 4)
 ORDER BY 1;
/* 13번 문제 */
SELECT DEPARTMENT_NO AS 학과코드명
 , COUNT(*) AS "휴학생 수"
 FROM TB_STUDENT
 WHERE ABSENCE_YN = 'Y'
 GROUP BY DEPARTMENT_NO
 ORDER BY 1;
/* 14번 문제 */
SELECT STUDENT_NAME AS 동일이름
 , COUNT(*) AS "동명인 수"
 FROM TB_STUDENT
 GROUP BY STUDENT_NAME
 HAVING COUNT(*) >= 2
 ORDER BY 1;
/* 15번 문제 */
SELECT SUBSTR(TERM_NO, 1, 4) AS 년도
 , SUBSTR(TERM_NO, 5, 2) AS 학기
 , ROUND(AVG(POINT), 1) AS 평점
 FROM TB_GRADE
 WHERE STUDENT_NO = 'A112113'
 GROUP BY CUBE(SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2))
 HAVING SUBSTR(TERM_NO, 1, 4) IS NOT NULL
 OR (SUBSTR(TERM_NO, 1, 4) IS NULL AND SUBSTR(TERM_NO, 5, 2) IS NULL)
 ORDER BY 1, 2 NULLS LAST;
