CREATE TABLE COMMISSION_LIST (
		EMP_ID NUMBER
	  , EMP_NAME VARCHAR2(50)
	  , COMMISSION_PCT NUMBER(3, 2)
);

/* # INSERT INTO
 * 다른 테이블의 데이터(EMPLOYEES)를 조회하고 그 조회 결과를 
 * 또 다른 테이블(COMMISSION_LIST)에 INSERT 하기
 * (테이블 컬럼 순서에 맞추어 SELECT 구문을 작성하면 됨.) 
 */

INSERT INTO COMMISSION_LIST(
	SELECT EMPLOYEE_ID AS EMP_NAME
	     , FIRST_NAME || ' ' || LAST_NAME AS EMP_ID
	     , COMMISSION_PCT
	  FROM EMPLOYEES
	 WHERE COMMISSION_PCT IS NOT NULL
);
-- 참고 :  INSERT INTO 할 테이블에 조회한 테이블 값을 넣을 때,
--		  AS 별칭으로 매칭을 안하거나 다른 별칭으로 넣어도 아무런 상관이 없음(순서만 맞추면 됨.)

SELECT * FROM COMMISSION_LIST;
DELETE FROM COMMISSION_LIST;

-----------------------------------------------------------------------------

/*
 * # INSERT ALL INTO 
 * 복수 개의 테이블에 INSERT 할 수 있음.
 * (단, 컬럼명이 다른 컬럼은 VALUES의 컬럼명으로 AS 별칭 매칭을 해줘야 INSERT가능함.)
 */


CREATE TABLE INC_COMMISSION_SALARY(
		EMP_ID NUMBER
	  , EMP_NAME VARCHAR2(50)
	  , SALARY NUMBER
);

INSERT ALL INTO COMMISSION_LIST VALUES(EMP_ID, EMP_NAME, COMMISSION_PCT)
		   INTO INC_COMMISSION_SALARY VALUES(EMP_ID, EMP_NAME, SALARY)
SELECT EMPLOYEE_ID AS EMP_ID
	 , FIRST_NAME || ' ' || LAST_NAME AS EMP_NAME
	 , COMMISSION_PCT
	 , SALARY * (1 + COMMISSION_PCT) AS SALARY
  FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NOT NULL;
 
SELECT * FROM COMMISSION_LIST;
DELETE FROM COMMISSION_LIST;

SELECT * FROM INC_COMMISSION_SALARY;
DELETE FROM INC_COMMISSION_SALARY;

---------------------------------------------------------------------------
/*
 * INSERT ALL INTO 에 조건식 WHEN ~ THEN 활용하여 각각 조회된 데이트럴 새로운 데이터에 넣기
 * : 이 경우 SELECT 구문에서처럼 CASE / END 는 제외(넣으면 에러남)
 */

/* 2000년 이전 입사자 */
CREATE TABLE BEFORE_2000_YEAR(
		EMP_ID NUMBER
	  , EMP_NAME VARCHAR2(50)
	  , HIRE_DATE DATE
);

/* 2000년 이후 입사자 */
CREATE TABLE AFTER_2000_YEAR(
		EMP_ID NUMBER
	  , EMP_NAME VARCHAR2(50)
	  , HIRE_DATE DATE
);

INSERT ALL 
 	WHEN HIRE_DATE < TO_DATE('20000101') THEN
		  INTO BEFORE_2000_YEAR(EMP_ID, EMP_NAME, HIRE_DATE)
	WHEN HIRE_DATE >= TO_DATE('20000101') THEN
		  INTO AFTER_2000_YEAR(EMP_ID, EMP_NAME, HIRE_DATE)
	-- INSERT 할 때 CASE / END는 안해도 되나보다.
SELECT EMPLOYEE_ID AS EMP_ID
	 , FIRST_NAME || ' ' || LAST_NAME AS EMP_NAME
	 , HIRE_DATE
	 -- HIRE_DATE를 조회해야 WHEN / THEN 조건식에 활용할 수 있으므로...
	 -- 추가할 테이블과 조회할 테이블에 포함되어 있어야 함.
  FROM EMPLOYEES;

SELECT * FROM BEFORE_2000_YEAR;
SELECT * FROM AFTER_2000_YEAR;
 
DELETE FROM BEFORE_2000_YEAR;
DELETE FROM AFTER_2000_YEAR;

------------------------------------------------------------------------
/* 활용 후 테이블 삭제 */

DROP TABLE COMMISSION_LIST;
DROP TABLE INC_COMMISSION_SALARY;
DROP TABLE BEFORE_2000_YEAR;
DROP TABLE AFTER_2000_YEAR;